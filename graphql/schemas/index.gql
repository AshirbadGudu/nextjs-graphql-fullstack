type Category {
  id: ID!
  name: String!
  slug: String!
  image: String
  icon: String
  isFeatured: Boolean!
  isPublished: Boolean!
  createdAt: String!
  updatedAt: String!
  metaTitle: String
  metaDesc: String
}

type Brand {
  id: ID!
  name: String!
  slug: String!
  image: String
  icon: String
  isFeatured: Boolean!
  isPublished: Boolean!
  createdAt: String!
  updatedAt: String!
  metaTitle: String
  metaDesc: String
}

type Query {
  categories(
    filter: String
    sort: String
    limit: Int
    offset: Int
  ): [Category!]!
  brands(filter: String, sort: String, limit: Int, offset: Int): [Brand!]!
  category(slug: String!): Category
  brand(slug: String!): Brand
}

input CategoryInput {
  name: String!
  slug: String!
  image: String
  icon: String
  isFeatured: Boolean!
  isPublished: Boolean!
  metaTitle: String
  metaDesc: String
}

input BrandInput {
  name: String!
  slug: String!
  image: String
  icon: String
  isFeatured: Boolean!
  isPublished: Boolean!
  metaTitle: String
  metaDesc: String
}

type Mutation {
  createCategory(input: CategoryInput!): Category
  createBrand(input: BrandInput!): Brand
  updateCategory(id: ID!, input: CategoryInput!): Category
  updateBrand(id: ID!, input: BrandInput!): Brand
  deleteCategory(id: ID!): Category
  deleteBrand(id: ID!): Brand
}
